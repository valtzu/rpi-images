name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y make wget xz-utils qemu-user-static

      - name: Build
        run: |
          make WORKDIR=$HOME/workdir -j4

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Upload jammy-minimal-cloudimg-arm64-root.tar.xz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: jammy-minimal-cloudimg-arm64.tar.xz
          asset_path: dist/jammy/minimal.tar.xz
          asset_content_type: application/octet-stream

      - name: Upload k3s-server.tar.xz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: k3s-server.tar.xz
          asset_path: dist/jammy/k3s-server.tar.xz
          asset_content_type: application/octet-stream

      - name: Upload k3s-agent.tar.xz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: k3s-agent.tar.xz
          asset_path: dist/jammy/k3s-agent.tar.xz
          asset_content_type: application/octet-stream

      - name: Upload kernel config
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: kernel-config
          asset_path: dist/jammy/config
          asset_content_type: application/octet-stream

      - name: Upload kernel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: vmlinuz
          asset_path: dist/jammy/vmlinuz
          asset_content_type: application/octet-stream

      - name: Upload kernel-modules.tar.xz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: kernel-modules.tar.xz
          asset_path: dist/jammy/kernel-modules.tar.xz
          asset_content_type: application/octet-stream

      - name: Upload initramfs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: initrd.img
          asset_path: dist/jammy/initrd.img
          asset_content_type: application/octet-stream

      - name: Upload iscsi.tar.xz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: iscsi.tar.xz
          asset_path: dist/jammy/iscsi.tar.xz
          asset_content_type: application/octet-stream
